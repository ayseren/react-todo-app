{"ast":null,"code":"var _jsxFileName = \"/Users/ayseguleren/Desktop/github/react-todo-app/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  name,\n  completed,\n  propsId,\n  toggleTaskCompleted,\n  deleteTask,\n  editTask\n}) {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  const handleChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: propsId,\n        children: [\"New name for \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: propsId,\n        className: \"todo-text\",\n        type: \"text\",\n        value: newName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn todo-cancel\",\n        onClick: () => {\n          setIsEditing(false);\n        },\n        children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"renaming \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary todo-edit\",\n        children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"new name for \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: propsId,\n        type: \"checkbox\",\n        defaultChecked: completed,\n        onChange: () => toggleTaskCompleted(propsId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: propsId,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => {\n          setIsEditing(true);\n        },\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: () => deleteTask(propsId),\n        children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"todo stack-small\",\n      children: isEditing ? editingTemplate : viewTemplate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"tnTsKq0Ha9f+O/79LIBGpjsmyrQ=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/ayseguleren/Desktop/github/react-todo-app/src/components/Todo.js"],"names":["React","useState","Todo","name","completed","propsId","toggleTaskCompleted","deleteTask","editTask","isEditing","setIsEditing","newName","setNewName","handleChange","e","target","value","editingTemplate","viewTemplate"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nfunction Todo({name, completed, propsId, toggleTaskCompleted, deleteTask, editTask}) {\n    const [isEditing, setIsEditing] = useState(false);\n    const [newName, setNewName] = useState(\"\");\n\n    const handleChange = (e) => {\n      setNewName(e.target.value);\n    }\n\n    const editingTemplate = (\n        <form className=\"stack-small\">\n          <div className=\"form-group\">\n            <label className=\"todo-label\" htmlFor={propsId}>\n              New name for {name}\n            </label>\n            <input \n              id={propsId} \n              className=\"todo-text\" \n              type=\"text\" \n              value={newName}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"btn-group\">\n            <button \n              type=\"button\" \n              className=\"btn todo-cancel\"\n              onClick={() => {setIsEditing(false)}}>\n              Cancel\n              <span className=\"visually-hidden\">renaming {name}</span>\n            </button>\n            <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n              Save\n              <span className=\"visually-hidden\">new name for {name}</span>\n            </button>\n          </div>\n        </form>\n    );\n    \n    const viewTemplate = (\n        <div className=\"stack-small\">\n          <div className=\"c-cb\">\n              <input\n                id={propsId}\n                type=\"checkbox\"\n                defaultChecked={completed}\n                onChange={() => toggleTaskCompleted(propsId)}\n              />\n              <label className=\"todo-label\" htmlFor={propsId}>\n                {name}\n              </label>\n            </div>\n            <div className=\"btn-group\">\n              <button \n                type=\"button\" \n                className=\"btn\"\n                onClick={() => {setIsEditing(true)}}>\n                Edit <span className=\"visually-hidden\">{name}</span>\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn__danger\"\n                onClick={() => deleteTask(propsId)}\n              >\n                Delete <span className=\"visually-hidden\">{name}</span>\n              </button>\n            </div>\n        </div>\n    );\n\n    return (\n        <div>\n            <li className=\"todo stack-small\">\n                {isEditing ? editingTemplate : viewTemplate}\n            </li>\n        </div>\n    )\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}